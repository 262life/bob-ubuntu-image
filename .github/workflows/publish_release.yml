name: release
on:
  push:
    tags:
    - "v[0-9]+.[1-9]+.[0-9]*"
jobs:

  build-platforms:
    strategy:
      matrix:
        os: [ARM64, X64]
        include:
        - os: X64
          X64: true
    runs-on: ${{ matrix.os }}
  #release:
  #  runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - run: |
          export SUFFIX=" (Codename: '$(cat CODENAME)')"
          echo "RELEASE_NAME_SUFFIX=$SUFFIX" >> $GITHUB_ENV
      - name: Print Release Version
        run: |
          export RELEASE_VERSION=$(echo $GITHUB_REF | awk -F\/ '{print $3}')
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "Release Version is $RELEASE_VERSION" 
          echo "$RELEASE_VERSION" > VERSION
          if echo "$RELEASE_VERSION" | grep "rc" > /dev/null ; then
            echo "RELEASE_PRE=true" >> $GITHUB_ENV
            echo "RELEASE_LATEST=false" >> $GITHUB_ENV
          else
            echo "RELEASE_PRE=false" >> $GITHUB_ENV
            echo "RELEASE_LATEST=true" >> $GITHUB_ENV
          fi
      - name: Build Action
        env: # Or as an environment variable
            docker_login: ${{ secrets.DOCKER_ID }}
            docker_token: ${{ secrets.DOCKER_TOKEN }}
        run: |
          bash -c "chmod 755 .github/scripts/build_scratch_image.sh; .github/scripts/build_scratch_image.sh"
          bash -c "chmod 755 .github/scripts/makedistro.sh; .github/scripts/makedistro.sh"
                   bash -c "chmod 755 .github/scripts/update_readme.sh; .github/scripts/update_readme.sh"
 
      - name: Push Artifacts
        uses: github-actions-x/commit@v2.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: 'master'
          commit-message: 'publish'
          force-add: 'true'
          files: README.md VERSION
          name: rsliotta
          email: bob@bobdot.me
      - name: Publish Release and Artifacts
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANGELOG_FILE: "CHANGES.md"
          DRAFT_RELEASE: "false"
          PRE_RELEASE: "${{ env.RELEASE_PRE }}"
          ALLOW_EMPTY_CHANGELOG: "false"
          ### ALLOW_TAG_PREFIX: "true"
        with:
          args: |
            distro/*.tar.gz
